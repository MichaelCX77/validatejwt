name: Run Tests and Create PR

on:
  push:
    branches-ignore:
      - main
      - develop
    # executa em todas as outras branches

jobs:
  test-and-report:
    runs-on: ubuntu-latest

    outputs:
      branch_name: ${{ steps.vars.outputs.branch_name }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # histórico completo

      - name: Set branch name
        id: vars
        run: echo "branch_name=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Run tests and generate Jacoco report
        run: mvn clean test jacoco:report

      - name: Extract coverage from HTML report
        run: |
          FILE="target/site/jacoco/index.html"
          if [ -f "$FILE" ]; then
            COVERAGE_LINE=$(grep -A 1 '<tfoot>' "$FILE" | grep 'Total')
            COVERAGE=$(echo "$COVERAGE_LINE" | grep -oP '(?<=<td class="ctr2">)[0-9]{1,3}%')
            COVERAGE=$(echo "$COVERAGE" | head -n 1)
            MIN_COVERAGE=80
            COVERAGE_VALUE=$(echo "$COVERAGE" | tr -d '%')

            echo "Cobertura mínima exigida: ${MIN_COVERAGE}%"
            echo "Cobertura atual: ${COVERAGE}"

            if [ "$COVERAGE_VALUE" -ge "$MIN_COVERAGE" ]; then
              echo "✅ Cobertura mínima atingida."
            else
              echo "❌ Cobertura abaixo do mínimo."
            fi

            echo "✅ Cobertura de instruções: $COVERAGE"
          else
            echo "❌ Arquivo de cobertura não encontrado: $FILE"
            exit 1
          fi

  create-pr-to-develop:
    needs: test-and-report
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Create pull request to develop from temp branch
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: develop
          # branch temporária para evitar alterar branch original
          branch: ${{ needs.test-and-report.outputs.branch_name }}-ci-pr
          title: "Auto PR: Merge '${{ needs.test-and-report.outputs.branch_name }}' into develop"
          body: Este PR foi criado automaticamente após a execução dos testes.
          draft: false
          labels: automated-pr
          delete-branch: true
